@{
    ViewBag.Title = "Home Page";
}

<script>
    var board = null;
</script>

<script>
    var id;
    $(document).ready(function () {
        $('#analyze').click(function () {
            var fen = $('#fen').first();
            var depth = $('#depthSpinner').first();
            var moveTurn = $('.moveTurn:checked').val();
            var data = {
                fen: fen.text(),
                depth: depth.spinner('value'),
                whiteToMove: moveTurn == 'Белые'? true : false
            }
            $.get('/Home/StartAnalyze', data, function (result) {
                id = result;
                setTimeout(timer, 2000);

                var cfg = {
                    draggable: false,
                    position: board.fen(),
                    onChange: onPositionChange,
                };

                board = new ChessBoard('board', cfg);
            });
        });
    });
</script>

<script>
    function makeMove(position) {
        //board.move(move.slice(0, 2) + '-' + move.slice(-2));
        board.position(position, true);
    }

    function onPositionChange(oldPos, newPos) {
        var fen = $('#fen');
        fen.html(ChessBoard.objToFen(newPos));
    }

    function timer() {
        var data = {
            guid: id
        }
        $.get('/Home/GetOutput', data, function (lineInfo, textStatus) {
            $('#depth').text(lineInfo.Depth);
            $('#score').text(lineInfo.Score);
            $('#nodes').text(lineInfo.Nodes);
            $('#time').text(lineInfo.Time);

            var cfg = {
                position: board.fen()
            };
            var fakeBoard = new ChessBoard('fakeBoard', cfg);
            $('#moves').first().empty();

            var movesLink = '';
            for (var i = 0; i < lineInfo.Moves.split(' ').length; i++) {
                var move = lineInfo.Moves.split(' ')[i];
                fakeBoard.move(move.slice(0, 2) + '-' + move.slice(-2));
                var currentPosition = fakeBoard.fen();
                if (i % 2 == 0) {
                    var currentMove = i / 2 + 1 + '. ';
                    $('#moves').append($('<span>' + currentMove + '</span>'));
                }
                    
                $('#moves').append($('<a class="move" onClick="makeMove(\'' + currentPosition + '\')" href="#">' + move + '</a> '));


//                if (i % 2 == 0)
//                    movesLink += i / 2 + 1 + '. ';
//                movesLink += '<a class="move" onClick="makeMove(\'' + currentPosition + '\')" href="#">' + move + '</a> ';
            }

//            $('#moves').first().empty();
//            $('#moves').first().html(movesLink);
        });
    }

    $(document).ready(function() {
        $("#depthSpinner").spinner();

        var cfg = {
            //draggable: true,
            position: '8/8/8/8/8/8/8/8',
            //onDragStart: onDragStart,
            //onDrop: onDrop,
            //dropOffBoard: 'trash',
            //onSnapEnd: onSnapEnd,
            onChange: onPositionChange,
            sparePieces: true
        };
        board = new ChessBoard('board', cfg);
        board.showErrors = 'console';
        $('#fen').html(cfg.position);
        $('#startPositionBtn').on('click', board.start);
        $('#clearBtn').on('click', board.clear);
    });

</script>

<div id="board" style="width: 400px"></div>
<div id="fakeBoard" hidden="true"></div>

<div id="analisis">
    <p>FEN: <span id="fen"></span></p>
    Depth: <input id="depthSpinner"><br/>
    Текущий ход
    <input class="moveTurn" type="radio" name="wer" value="Белые" title="sdfsdf" checked="True"/> Белые
    <input class="moveTurn" type="radio" name="wer" value="Черные" /> Черные
    <br/>
    <input value="Analyze" type="button" id="analyze" />
    <input type="button" id="startPositionBtn" value="Start Position" />
    <input type="button" id="clearBtn" value="Clear" />
    
    <div id="engineOutput">
        <table>
            <tr>
                <td>Depth</td>
                <td id="depth"></td>
            </tr>
            <tr>
                <td>Score</td>
                <td id="score"></td>
            </tr>
            <tr>
                <td>Nodes</td>
                <td id="nodes"></td>
            </tr>
            <tr>
                <td>Time</td>
                <td id="time"></td>
            </tr>
            <tr>
                <td>Moves</td>
                <td>
                    <div id="moves"></div>
                </td>
            </tr>
        </table>
    </div>
</div>