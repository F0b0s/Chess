@{
    ViewBag.Title = "Home Page";
}

<script>
    var board = null;
    var id;
    $(document).ready(function () {
        $('#analyze').click(function () {
            var fen = $('#fen').first();
            var depth = $('#depthSpinner').first();
            var moveTurn = $('.moveTurn:checked').val();
            var data = {
                fen: fen.val(),
                depth: depth.spinner('value'),
                whiteToMove: moveTurn == 'Белые'? true : false
            }
            $.get('/Home/StartAnalyze', data, function (result) {
                id = result;
                setTimeout(timer, 2000);

                var cfg = {
                    draggable: false,
                    position: board.fen(),
                    onChange: onPositionChange,
                };

                board = new ChessBoard('board', cfg);
            });
        });
    });

    $(document).ready(function () {
        $("#depthSpinner").spinner();
        $("#depthSpinner").spinner('value', 1);

        var cfg = {
            position: '8/8/8/8/8/8/8/8',
            onChange: onPositionChange,
            sparePieces: true
        };
        board = new ChessBoard('board', cfg);
        board.showErrors = 'console';
        $('#fen').val(cfg.position);
    });
</script>

<script>
    function makeMove(position, caller) {
        $('.move').removeClass('currentMove');
        $(caller).addClass('currentMove');
        board.position(position, true);
    }

    function onPositionChange(oldPos, newPos) {
        var fen = $('#fen');
        fen.val(ChessBoard.objToFen(newPos));
    }

    function timer() {
        var data = {
            guid: id
        }
        $.get('/Home/GetOutput', data, function (lines, textStatus) {
            var infoLine = lines[0].Time / 1000 + ' sec, depth ' + lines[0].Depth + ', ' + lines[0].Nodes + ' nodes';
            $('#infoLine').text(infoLine);

            var cfg = {
                position: board.fen()
            };

            $('#moves').empty();
            $('#scores').empty();

            for (var j = 0; j < lines.length; j++) {
                var divLine = $('<div/>');
                var fakeBoard = new ChessBoard('fakeBoard', cfg);
                var lineInfo = lines[j];
                
                var moves = lineInfo.Moves.split(' ');
                divLine.append($('<a class="move" hidden="true" onClick="makeMove(\'' + board.fen() + '\', this)" href="#"></a>'));

                for (var i = 0; i < moves.length; i++) {
                    var move = moves[i];
                    fakeBoard.move(move.slice(0, 2) + '-' + move.slice(-2));
                    var currentPosition = fakeBoard.fen();
                    if (i % 2 == 0) {
                        var currentMove = i / 2 + 1 + '. ';
                        divLine.append($(' <span>' + currentMove + '</span>'));
                    }

                    divLine.append($('<a class="move" onClick="makeMove(\'' + currentPosition + '\', this)" href="#">' + move + ' </a>'));
                }
                $('#moves').append(divLine);
                $('#scores').append('<div>' + lineInfo.Score / 100 + '</div>');
            }
        });
    }

    function moveLeft() {
        $('.currentMove').prevUntil('#moves', '.move').first().click();
    }

    function moveRight() {
        $('.currentMove').nextUntil('#moves', '.move').first().click();
    }

    function moveStart() {
        $('.currentMove').prevUntil('#moves', '.move').last().click();
    }

    function moveEnd() {
        $('.currentMove').nextUntil('#moves', '.move').last().click();
    }

    function flipBoard() {
        board.flip();
    }

    function setStartPosition() {
        board.start();
    }

    function clearBoard() {
        board.clear();
    }
</script>

<div id="chessBoard">
    <div id="board"></div>
    <div class="navigation">
        <input type="image" src="/content/images/flip.png" width="16" height="16" id="flip" onclick="flipBoard()"/>
        <input type="image" src="/content/images/start.png" width="16" height="16" onclick="moveStart()" />
        <input type="image" src="/content/images/left.png" width="16" height="16" onclick="moveLeft()" />
        <input type="image" src="/content/images/right.png" width="16" height="16" onclick="moveRight()" />
        <input type="image" src="/content/images/end.png" width="16" height="16"  onclick="moveEnd()" />
        <input type="button" id="startPositionBtn" value="Start Position" onclick="setStartPosition()" />
        <input type="button" id="clearBtn" value="Clear" onclick="clearBoard()" />
    </div>
    <span class="fen">
        <label>FEN: </label>
        <input id="fen" type="text"/>
    </span>
</div>

<div id="analisys">
    Depth: <input id="depthSpinner" min="1" max="30" ><br/>
    Текущий ход
    <input class="moveTurn" type="radio" name="wer" value="Белые" title="sdfsdf" checked="True"/> Белые
    <input class="moveTurn" type="radio" name="wer" value="Черные" /> Черные
    <br/>
    <input value="Analyze" type="button" id="analyze" />
    <div id="engineOutput">
        <table>
            <tr>
                <td>Evaluation</td>
                <td>Line</td>
            </tr>
            <tr>
                <td id="scores"/>
                <td id="moves" />
            </tr>
            <tr>
                <td id="infoLine" colspan="2"></td>
            </tr>
        </table>
    </div>
</div>

<div id="fakeBoard" hidden="true" />