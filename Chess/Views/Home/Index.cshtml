@{
    ViewBag.Title = "Home Page";
}

<script>
    var id = '';
    $(document).ready(function () {
        $('#analyze').first().click(function () {
            var fen = $('#fen').first();
            var depth = $('#depthSpinner').first();
            var moveTurn = $('.moveTurn:checked').val();
            var data = {
                fen: fen.text(),
                depth: depth.spinner('value'),
                whiteToMove: moveTurn == 'Белые'? true : false
            }
            $.get('/Home/StartAnalyze', data, function(result) {
                id = result;
                setInterval(timer, 2000);
            });
        });
    });
</script>

<script>
    function makeMove(move) {
        board.move(move.slice(0, 2) + '-' + move.slice(-2));
    }

    function onPositionChange(oldPos, newPos) {
        var fen = $('#fen');
        fen.html(ChessBoard.objToFen(newPos));
    }

    function timer() {
        var data = {
            guid: id
        }
        $.get('/Home/GetOutput', data, function (lineInfo, textStatus) {
            $('#depth').text(lineInfo.Depth);
            $('#score').text(lineInfo.Score);
            $('#nodes').text(lineInfo.Nodes);
            $('#time').text(lineInfo.Time);
            
            var movesLink = '';
            for (var i = 0; i < lineInfo.Moves.split(' ').length; i++) {
                var move = lineInfo.Moves.split(' ')[i];
                if (i % 2 == 0)
                    movesLink += i / 2 + 1 + '. ';
                movesLink +=  '<a class="move" onClick="makeMove(\'' + move +  '\')" href="#">' + move + '</a> ';
            }

            $('#moves').first().empty();
            $('#moves').first().html(movesLink);
        });
    }
</script>

<script>
    $(document).ready(function () {
        $("#depthSpinner").spinner();
    });
</script>

<script language="">
    var board = null;
    $(document).ready(function () {
        var game = new Chess(),
      statusEl = $('#status'),
      fenEl = $('#fen'),
      pgnEl = $('#pgn');

        // do not pick up pieces if the game is over
        // only pick up pieces for the side to move
        var onDragStart = function (source, piece, position, orientation) {
            if (game.game_over() === true ||
                (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
                (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
                return false;
            }
        };

        var onDrop = function (source, target) {
            // see if the move is legal
            var move = game.move({
                from: source,
                to: target,
                promotion: 'q' // NOTE: always promote to a queen for example simplicity
            });

            // illegal move
            if (move === null) return 'snapback';

            updateStatus();
        };

        // update the board position after the piece snap 
        // for castling, en passant, pawn promotion
        var onSnapEnd = function () {
            board.position(game.fen());
        };

        var updateStatus = function () {
            var status = '';

            var moveColor = 'White';
            if (game.turn() === 'b') {
                moveColor = 'Black';
            }

            // checkmate?
            if (game.in_checkmate() === true) {
                status = 'Game over, ' + moveColor + ' is in checkmate.';
            }

                // draw?
            else if (game.in_draw() === true) {
                status = 'Game over, drawn position';
            }

                // game still on
            else {
                status = moveColor + ' to move';

                // check?
                if (game.in_check() === true) {
                    status += ', ' + moveColor + ' is in check';
                }
            }

            statusEl.html(status);
            fenEl.html(game.fen());
            pgnEl.html(game.pgn());
        };

        var cfg = {
            draggable: true,
            //position: 'start',
            //onDragStart: onDragStart,
            //onDrop: onDrop,
            dropOffBoard: 'trash',
            //onSnapEnd: onSnapEnd,
            onChange: onPositionChange,
            sparePieces: true
        };
        board = new ChessBoard('board', cfg);
        
        $('#startPositionBtn').on('click', board.start);
        $('#clearBtn').on('click', board.clear);
        
        updateStatus();
    });

</script>

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-large">Learn more &raquo;</a></p>
</div>

<div id="board" style="width: 400px"></div>

<div id="analisis">
    <p>Status: <span id="status"></span></p>
    <p>FEN: <span id="fen"></span></p>

    <p>PGN: <span id="pgn"></span></p>
    Depth: <input id="depthSpinner"><br/>
    Текущий ход
    <input class="moveTurn" type="radio" name="wer" value="Белые" title="sdfsdf" checked="True"/> Белые
    <input class="moveTurn" type="radio" name="wer" value="Черные" /> Черные
    <br/>
    <input value="Analyze" type="button" id="analyze" />
    <input type="button" id="startPositionBtn" value="Start Position" />
    <input type="button" id="clearBtn" value="Clear" />
    
    <div id="engineOutput">
        <table>
            <tr>
                <td>Depth</td>
                <td id="depth"></td>
            </tr>
            <tr>
                <td>Score</td>
                <td id="score"></td>
            </tr>
            <tr>
                <td>Nodes</td>
                <td id="nodes"></td>
            </tr>
            <tr>
                <td>Time</td>
                <td id="time"></td>
            </tr>
            <tr>
                <td>Moves</td>
                <td id="moves"></td>
            </tr>
        </table>
    </div>
</div>